<?php

/**   
 * Implements hook_init().
 */ 
function spwebformsync_init() {
  module_load_include("inc", "spwebformsync", "spwebformsync.form");
  module_load_include("inc", "spwebformsync", "spwebformsync.processing");
  module_load_include("inc", "spwebformsync", "spwebformsync.settings");
  module_load_include("inc", "spwebformsync", "components/spwebformsync.components");
  module_load_include('inc', 'webform', 'includes/webform.submissions');
}   

/**
 * Implements hook_menu().
 */
function spwebformsync_menu() {
  $items = array();

  $items['admin/config/sp/spwebformsync'] = array(
    'title' => 'SP webformulier synchronizatie',
    'type' => MENU_NORMAL_ITEM,
    'page callback' => 'spwebformsync_overview',
    'file' => 'spwebformsync.admin.inc',
    'access callback' => sprbs_access_check(),
  );

  $items['admin/config/sp/spwebformsync/overview'] = array(
    'title' => 'Overzicht SP webformulier synchronizaties',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => '0',
  );

  $items['admin/config/sp/spwebformsync/add'] = array(
    'title' => 'SP webformulier synchronizatie toevoegen',
    'type' => MENU_LOCAL_TASK,
    'page callback' => 'drupal_get_form',
    'page arguments' => array('spwebformsync_admin_form'),
    'file' => 'spwebformsync.admin.inc',
    'access callback' => sprbs_access_check(),
  );

  $items['admin/config/sp/spwebformsync/settings'] = array(
    'title' => 'Instellingen',
    'type' => MENU_LOCAL_TASK,
    'page callback'  => 'drupal_get_form',
    'page arguments' => array('spwebformsync_settings_form'),
    'file' => 'spwebformsync.admin.inc',
    'access callback' => sprbs_access_check(),
    'weight' => '1',
  );

  $items['admin/config/sp/spwebformsync/delete/%'] = array(
    'title' => 'SP webformulier synchronizatie verwijderen',
    'page callback' => 'spwebformsync_delete',
    'page arguments' => array(5),
    'access callback' => sprbs_access_check(),
    'type' => MENU_CALLBACK,
    'file' => 'spwebformsync.admin.inc',
  );

  $items['spwebformsync/group/autocomplete'] = array(
    'title' => 'SP webformsync autocomplete',
    'page callback' => 'spwebformsync_group_autocomplete',
    'access callback' => sprbs_access_check(),
    'type' => MENU_CALLBACK,
    'file' => 'spwebformsync.admin.inc',
  );

  return $items;
}

/**
 *  Implements hook_node_delete.
 */
function spwebformsync_node_delete($node) {
  // Delete spwebformsync sync data if webform is deleted.
  if ($node->type === 'webform') {
    $sync_data = variable_get('spwebformsync_sync_data', array());
    // Check if there is a spwebformsync for this webform.
    if (isset($sync_data[$node->nid])) {
      unset($sync_data[$node->nid]);
      variable_set('spwebformsync_sync_data', $sync_data);
      drupal_set_message('SP Webform sync nr. ' . $node->nid . ' attached to this form has been deleted.', 'warning');
      // To do: delete all submission sync states for this sync.
      $result = spwebformsync_delete_all_webform_submissions($node->nid);
      if (!empty($result)) {
        drupal_set_message('All postphoned webform syncs from webform nr. ' . $node->nid . ' have been deleted.', 'warning');
      }
    }
  }
}

/**
 *  Implements hook_webform_submission_insert.
 */
function spwebformsync_webform_submission_insert($node, $submission) {
  $sync_data = variable_get('spwebformsync_sync_data', FALSE);
  $sync_type = variable_get('spwebformsync_sync_type'); 
  if (!empty($sync_data) && isset($sync_data[$node->nid])) {
    $result = spwebformsync_store_submission_sync_state($node->nid, $submission->sid, 'unprocessed');
    if (!$result) watchdog('spwebformsync', 'Error storing submission state in database (sid=' . $submission->sid . ').', array(), WATCHDOG_ERROR);
    if ($sync_type === 'direct') {
      // Directly sync without check if confirmed.
      spwebformsync_process_submission($submission);
    }
  }
}

function spwebformsync_webform_submission_delete($node, $submission) {
  // Delete a record from a 3rd-party module table when a submission is deleted.
  db_delete('spwebformsync_syncstate')
    ->condition('nid', $node->nid)
    ->condition('sid', $submission->sid)
    ->execute();
  drupal_set_message('Cleaned up webform sync for the deleted submission.');
}

/*
 * Implements hook_cron().
 *
 * Syncs not yet synced webform submissions.
 */
function spwebformsync_cron() {
  $sync_type = variable_get('spwebformsync_sync_type'); 
  if ($sync_type == 'cron') {
    spwebformsync_sync();
  }
}

function spwebformsync_unprocessed_count($nid) {
  $query = "SELECT COUNT(sid) FROM {spwebformsync_syncstate} WHERE nid = :nid AND state = 'unprocessed'";
  $result = db_query($query, array(':nid' => $nid));
  $count = $result->fetchfield(0);
  return $count;
}
